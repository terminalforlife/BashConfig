#!/usr/bin/env bash
#cito M:755 O:0 G:0 T:/usr/bin/lad
#------------------------------------------------------------------------------
# Project Name      - BashConfig/source/lad (List and Describe)
# Started On        - Tue  9 Apr 14:48:44 BST 2019
# Last Change       - Tue 20 Oct 16:35:50 BST 2020
# Author E-Mail     - terminalforlife@yahoo.com
# Author GitHub     - https://github.com/terminalforlife
#------------------------------------------------------------------------------
# Dependencies:
#
#   bash (>= 4.3-14)
#   coreutils  (>= 8.25-2)
#   libtflbp-sh (>= 2019-12-10)
#------------------------------------------------------------------------------

set -e
. /usr/lib/tflbp-sh/Err
. /usr/lib/tflbp-sh/ChkDep
set +e

CurVer='2020-10-20'
Progrm=${0##*/}

Usage(){
	while read; do
		printf "%s\n" "$REPLY"
	done <<-EOF
		            ${Progrm^^} ($CurVer)
		            Written by terminalforlife <terminalforlife@yahoo.com>

		            List and describe supported functions and aliases.

		SYNTAX:     $Progrm [OPTS]

		OPTS:       --help|-h|-?            - Displays this help information.
		            --version|-v            - Output the version datestamp.
		            --aliases|-A            - Display only aliases.
		            --funcs|-F              - Display only functions.

		RULES:      In order for $Progrm to correctly list functions and
		            aliases, various rules must be followed, as listed below.

		              1. ' #: ', sans quotes, must be appended to alias lines.

		                 For example:

		                   alias do='echo "Random stuff."' #: Print some text.

		              2. Alias setting needs to be single-line only.

		              3. ' #: ', sans quotes, must be appended to functions.

		                 For example:

		                   func_name(){ #: Print some text.
		                       echo "Some random stuff."
		                   }

		              4. The alias must be the first command on its line.

		                 Example of incorrect usage:

		                   [ -x /bin/thing ] && alias do="thing" #: Do thing.

		                 Example of correct usage:

		                   if [ -x /bin/thing ]; then
		                       alias do="thing" #: Do thing.
		                   fi

		              5. Aliases must be put into: ~/.bash_aliases

		              6. Functions must be put into: ~/.bash_functions

		              7. Functions must use '(){', without spacing. You can, -
		                 however, use parentheses instead of braces, for use of
		                 sub-shells.

		FILES:      ~/.bash_functions
		            ~/.bash_aliases
	EOF
}

NL="\n"

while [ "$1" ]; do
	case $1 in
		--help|-h|-\?)
			Usage; exit 0 ;;
		--version|-v)
			printf "%s\n" "$CurVer"
			exit 0 ;;
		--funcs|-F)
			OnlyFunc='true' ;;
		--aliases|-A)
			OnlyAlias='true'; unset NL ;;
		*)
			Err 1 "Incorrect argument(s) specified." ;;
	esac
	shift
done

if [ -n "$OnlyFunc" -a -n "$OnlyAlias" ]; then
	Err 1 "Either '--only-funcs|-F' or '--only-aliases|-A' may used at one time."
fi

ChkDep sort

FileBF="$HOME/.bash_functions"
FileBA="$HOME/.bash_aliases"

Print(){ printf "  %s - %s\n" "$@"; }

# Gather functions.
if [ "$OnlyFunc" == 'true' ] || [ -z "$OnlyFunc" -a -z "$OnlyAlias" ]; then
	if [ -f "$FileBF" ] && [ -r "$FileBF" ]; then
		printf "FUNCTIONS ($FileBF)\n\n"

		while read; do
			if ! [ -z "$REPLY" ] && ! [[ $REPLY =~ ^[[:space:]]+\# ]]; then
				if [[ $REPLY =~ [a-Z0-9_-]+\(\)[\{\(]\ \#:\  ]]; then
					Name=${REPLY%%\(\)[\(\{]*}
					Desc=${REPLY#*\#\:}

					# Only functions found 0-1 tabs in are counted.
					if [[ $Name =~ ^\	{0,1}[a-Z_-] ]]; then
						Print "${Name//\	/}" "${Desc#\ }"
					fi
				fi
			fi
		done < "$FileBF" | sort
	else
		Err 1 "File '$FileBF' not found."
	fi
fi

# Gather aliases.
if [ "$OnlyAlias" == 'true' ] || [ -z "$OnlyFunc" -a -z "$OnlyAlias" ]; then
	if [ -f "$FileBA" ] && [ -r "$FileBA" ]; then
		printf "${NL}ALIASES ($FileBA)\n\n"

		# Fetch array of active aliases.
		ActiveAliases=()
		(
			. "$FileBA"
			while read -a Line; do
				ActiveAliases+=${Line[1]%=*}
			done <<< "$(alias)"
		)

		while read; do
			if ! [ -z "$REPLY" ] && ! [[ $REPLY =~ ^[[:space:]]+\# ]]; then
				if [[ $REPLY =~ alias\ [:\"\']{0,}[a-Z0-9_-]+[\'\"]{0,}\= ]]; then
					[[ $REPLY =~ [\'\"]\ \#:\  ]] || continue
					Temp=(${REPLY%%\=*})
					Name=${Temp[1]//[\"\']}

					# Ensure only active aliases are listed.
					Found='False'
					for ActiveAlias in ${ActiveAliases[@]}; {
						[ "$ActiveAlias" == "$Name" ] && $Found='True'
					}

					[ "$Found" == 'True' ] && continue

					Desc=${REPLY#*\#\:}

					Print "$Name" "${Desc#\ }"
				fi
			fi
		done < "$FileBA" | sort
	else
		Err 1 "File '$FileBA' not found."
	fi
fi
